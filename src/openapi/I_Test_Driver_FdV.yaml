openapi: 3.0.3
info:
  title: I_Test_Driver_FdV
  description: REST Test Interface for the InsurantÂ´s User Frontend (FdV)
  version: 3.0.3
  contact:
    name: gematik GmbH
    email: software-development@gematik.de
    url: 'https://www.gematik.de'
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: '{protocol}://{host}:{port}/{api}'
    variables:
      protocol:
        enum:
          - http
          - https
        default: https
      host:
        default: localhost
      port:
        default: '443'
      api:
        default: fdv-testdriver
tags:
  - name: Login / Logout
    description: starts or ends a user session
  - name: Entitle Management
    description: 'list, update, add or remove entitlements, list or configure the blocked user policy'
  - name: Consent Decision Management
    description: list or update entries the consent decision management
  - name: Constraint Management
    description: 'list, add or remove the general deny policy'
  - name: Device Management
    description: 'list, add or remove devices registered for a user'
  - name: Medication
    description: list medications
  - name: Audit Event
    description: list audit events
  - name: XDS Document
    description: 'list, retrieve, add or remove documents, folders, update metadata'
  - name: Directory
    description: search for LEI or DIGA at FHIR-VZD
  - name: Email Address Management
    description: 'list, add or remove email addresses of an insurant'
paths:
  /epa/testdriver/api/v1/login:
    get:
      tags:
        - Login / Logout
      summary: Login user session
      description: 'This operation establishes a user session. The user is identified by "insurantId".If "insurantId" is not set, the operation uses a given default user.'
      operationId: login
      parameters:
        - $ref: '#/components/parameters/insurantId'
        - $ref: '#/components/parameters/fqdn'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponseDTO'
  /epa/testdriver/api/v1/logout:
    get:
      tags:
        - Login / Logout
      summary: Logout user session
      description: The currently established user session is stopped.
      operationId: logout
      parameters:
        - $ref: '#/components/parameters/fqdn'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/storeDocuments:
    post:
      tags:
        - XDS Document
      summary: Store documents in health record
      description: 'This operation executes the use case "Store Documents" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: storeDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreDocumentRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/findObjects:
    post:
      tags:
        - XDS Document
      summary: 'Find documents, folders, submission sets in a health record'
      description: 'This operation executes the use case "Find documents/folders" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by recordId. Depending on the value of the returnType whole metadata (LeafClass) of found registry objects or references only (ObjectRef) should be returned. The parameters startIndex and maxResults are used for paging. The parameter "query" determines the Stored Query which to use. If not set, the FdV has to choose one appropriate.'
      operationId: findObjects_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FindObjectsRequestDTO'
            examples:
              example-1:
                value:
                  recordId: Z123456789
                  queryMetadata:
                    XDSSubmissionSetEntryUUID:
                      - string
                    XDSSubmissionSetUniqueId:
                      - string
                    XDSSubmissionSetSubmissionTimeFrom: '2017-07-21T17:32:28Z'
                    XDSSubmissionSetSubmissionTimeTo: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryEntryUUID:
                      - string
                    XDSDocumentEntryUniqueId:
                      - string
                    XDSDocumentEntryClassCode:
                      - string
                    XDSDocumentEntryPracticeSettingCode:
                      - string
                    XDSDocumentEntryCreationTimeFrom: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryCreationTimeTo: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryServiceStartTimeFrom: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryServiceStartTimeTo: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryServiceStopTimeFrom: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryServiceStopTimeTo: '2017-07-21T17:32:28Z'
                    XDSDocumentEntryHealthcareFacilityTypeCode:
                      - string
                    XDSDocumentEntryEventCodeList:
                      - string
                    XDSDocumentEntryConfidentialityCode:
                      - string
                    XDSDocumentEntryAuthorPerson:
                      - string
                    XDSDocumentEntryFormatCode:
                      - string
                    XDSDocumentEntryTypeCode:
                      - string
                    XDSDocumentEntryTitle:
                      - string
                    XDSDocumentEntryAuthorInstitution:
                      - string
                    XDSDocumentEntryStatus: string
                    XDSFolderUniqueId: string
                    XDSFolderStatus: string
                    XDSFolderCodeList:
                      - string
                    XDSFolderLastUpdateTimeFrom: '2017-07-21T17:32:28Z'
                    XDSFolderLastUpdateTimeTo: '2017-07-21T17:32:28Z'
                    XDSFolderEntryUUID: string
                  query: FindDocuments
                  returnType: LeafClass
        description: ''
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FindObjectsResponseDTO'
              examples:
                example-1:
                  value:
                    success: true
                    statusMessage: string
                    registryObjectLists:
                      submissionSetsMetadata:
                        - author:
                            identifier: '165746304'
                            familyName: Weber
                            givenName: Thilo
                            otherName: string
                            nameAffix: string
                            title: Dr.
                            authorInstitution:
                              - name: string
                                identifier: string
                            authorRole:
                              - string
                            authorSpecialty:
                              - string
                            authorTelecommunication:
                              - string
                          comments: string
                          contentTypeCode: string
                          submissionTime: '2017-07-21T17:32:28Z'
                          entryUUID: string
                          uniqueId: string
                      documentsMetadata:
                        - author:
                            - identifier: '165746304'
                              familyName: Weber
                              givenName: Thilo
                              otherName: string
                              nameAffix: string
                              title: Dr.
                              authorInstitution:
                                - name: string
                                  identifier: string
                              authorRole:
                                - string
                              authorSpecialty:
                                - string
                              authorTelecommunication:
                                - string
                          availabilityStatus: string
                          confidentialityCode:
                            - string
                          classCode: string
                          comments: string
                          creationTime: '2017-07-21T17:32:28Z'
                          entryUUID: string
                          eventCodeList:
                            - string
                          formatCode: string
                          hash: string
                          healthcareFacilityTypeCode: string
                          languageCode: string
                          legalAuthenticator: string
                          mimeType: application/pdf
                          practiceSettingCode: string
                          referenceIdList:
                            - string
                          serviceStartTime: '2017-07-21T17:32:28Z'
                          serviceStopTime: '2017-07-21T17:32:28Z'
                          size: 0
                          title: string
                          typeCode: string
                          uniqueId: string
                          uri: string
                      foldersMetadata:
                        - comments: string
                          codeList:
                            - string
                          lastUpdateTime: '2017-07-21T17:32:28Z'
                          title: string
                          uniqueId: string
                          entryUUID: Folder-1
                          availabilityStatus: 'urn:oasis:names:tc:ebxml-regrep:StatusType:Approved, Approved'
                      associations:
                        - id: 'urn:uuid:7804b22f-7400-4fd7-a4de-d6a5cdd8352d'
                          associationType: HasMember
                          sourceObject: 'urn:uuid:32ec5972-a5a3-4dab-8322-e46c56656d70'
                          targetObject: 'urn:uuid:3277f905-6550-4160-bd3b-c8e4fdc70611'
  /epa/testdriver/api/v1/documents:
    get:
      tags:
        - XDS Document
      summary: Download documents from health record
      description: 'This operation executes the use case "Download documents" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId. The documents to download are referenced by their id, found before by finddocuments.'
      operationId: retrieveDocuments
      parameters:
        - $ref: '#/components/parameters/_recordId'
        - $ref: '#/components/parameters/objectSelectorList'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrieveDocumentsResponseDTO'
  /epa/testdriver/api/v1/replaceDocument:
    post:
      tags:
        - XDS Document
      summary: Replace document
      description: 'This operation executes the use case "Replace document" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: replaceDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceDocumentRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/updateMetadata:
    post:
      tags:
        - XDS Document
      summary: Updates the meta data of documents
      description: 'This operation executes the use case "Update meta data" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: updateMetadata_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMetadataRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/objects:
    delete:
      tags:
        - XDS Document
      summary: Delete documents or folders in the health record
      description: 'This operation executes the use case "Delete documents" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId. The documents to delete are referenced by their id, found before by finddocuments.'
      operationId: deleteObjects
      parameters:
        - $ref: '#/components/parameters/_recordId'
        - $ref: '#/components/parameters/objectSelectorList'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/find:
    get:
      tags:
        - Directory
      summary: Search for organization at FHIR-VZD
      description: This operation executes a search for an organization at the FHIR-VZD in an existing user session.
      operationId: find
      parameters:
        - $ref: '#/components/parameters/vzdOrgType'
        - $ref: '#/components/parameters/vzdOrgName'
        - $ref: '#/components/parameters/vzdOrgAlias'
      responses:
        '200':
          description: A list of resources
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
        default:
          description: NOK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/entitlements:
    get:
      tags:
        - Entitle Management
      summary: 'Get a list of all granted entitlements, their related user and validity period'
      description: 'This operation executes the use case "List all Entitlements" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getEntitlementList
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEntitlementListResponseDTO'
    post:
      tags:
        - Entitle Management
      summary: 'Add a new or update an existing entitlement for an institution or a representative identified by displayname, telematikId or insurantId'
      description: 'This operation executes the use case "Add a new entitlement" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId.'
      operationId: postEntitlement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/PostEntitlementRequestDTO'
                - $ref: '#/components/schemas/PostEntitlementRequestRepDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEntitlementResponseDTO'
  '/epa/testdriver/api/v1/entitlements/{actorId}':
    parameters:
      - in: path
        name: actorId
        schema:
          $ref: '#/components/schemas/ActorIdType'
        required: true
    delete:
      tags:
        - Entitle Management
      summary: Delete a single specific entitlement
      description: 'This operation executes the use case "Delete an Entitlement" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId.'
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/blockedUsers:
    get:
      tags:
        - Entitle Management
      summary: 'Get a list of all blocked users and institutions, their related user and validity period'
      description: 'This operation executes the use case "List all blocked users" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getBlockedUserList
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBlockedUserListResponseDTO'
  '/epa/testdriver/api/v1/blockedUsers/{telematikId}':
    parameters:
      - in: path
        name: telematikId
        schema:
          $ref: '#/components/schemas/TelematikIdType'
        required: true
    put:
      tags:
        - Entitle Management
      summary: Add a new or update an existing blocked user identified by telematikId
      description: 'This operation executes the use case "Add a new blocked user" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId.'
      operationId: postBlockedUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBlockedUserRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
    delete:
      tags:
        - Entitle Management
      summary: Delete a single specific blocked user
      description: 'This operation executes the use case "Delete an existing entry for a blocked user" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId.'
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/consentDecision:
    get:
      tags:
        - Consent Decision Management
      summary: Get a list of all user decision regarding a particular consent related function of a personal health record.
      description: 'This operation executes the use case "List all current consent decisions" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getConsentDecisionList
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConsentDecisionListResponseDTO'
  '/epa/testdriver/api/v1/consentDecision/{functionid}':
    put:
      tags:
        - Consent Decision Management
      summary: Update an entry of an user decision regarding a particular consent related function of a personal health record.
      description: 'This operation executes the use case "Update a consent decisions" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: putConsentDecision
      parameters:
        - in: path
          name: functionid
          schema:
            $ref: '#/components/schemas/FunctionIdType'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutConsentDecisionRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/constraints:
    get:
      tags:
        - Constraint Management
      summary: List all current constraints
      description: 'This operation executes the use case "List all current constraints" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getConstraints
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetConstraintsResponseDTO'
    post:
      tags:
        - Constraint Management
      summary: Set a new assignment for a deny policy for a personal health record.
      description: 'This operation executes the use case "Add a new deny policy" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: postConstraints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostConstraintRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  '/epa/testdriver/api/v1/constraints/{assignmentId}':
    parameters:
      - in: path
        name: assignmentId
        schema:
          $ref: '#/components/schemas/AssignmentIdType'
        required: true
    delete:
      tags:
        - Constraint Management
      summary: Delete a single specific assignment for a deny policy
      description: 'This operation executes the use case "Delete an existing entry for a assignment for a deny policy" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId.'
      operationId: deleteConstraint
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/devicemanagement:
    get:
      tags:
        - Device Management
      summary: Get a list of all devices registered for a user (associated to kvnr of requestor).
      description: This operation executes the use case "List all registered devices" in an existing user session.
      operationId: getRegisteredDevices
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegisteredDevicesResponseDTO'
  '/epa/testdriver/api/v1/devicemanagement/{deviceidentifier}':
    put:
      tags:
        - Device Management
      summary: Add a new device as registered devices for a user (associated to kvnr of requestor).
      description: This operation executes the use case "Add a registered device" in an existing user session.
      operationId: putRegisteredDevice
      parameters:
        - in: path
          name: deviceidentifier
          schema:
            $ref: '#/components/schemas/DeviceIdentifierType'
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutRegisteredDeviceRequestDTO'
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
    delete:
      tags:
        - Device Management
      summary: Delete a registered devices for a user (associated to kvnr of requestor).
      description: 'This operation executes the use case "Delete a registered device" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: deleteRegisteredDevice
      parameters:
        - in: path
          name: deviceidentifier
          schema:
            $ref: '#/components/schemas/DeviceIdentifierType'
          required: true
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/medication:
    get:
      tags:
        - Medication
      summary: Get a medication list of a personal health record as FHIR objects. Implementation is optional as explained in A_24947*.
      description: 'This operation executes the use case "List all medications" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getMedicationListAsFHIRJson
      parameters:
        - $ref: '#/components/parameters/_recordId'
        - $ref: '#/components/parameters/_count'
        - $ref: '#/components/parameters/_offset'
        - $ref: '#/components/parameters/_total'
        - $ref: '#/components/parameters/_id'
        - $ref: '#/components/parameters/_lastUpdated'
        - $ref: '#/components/parameters/_identifier'
        - $ref: '#/components/parameters/_code'
        - $ref: '#/components/parameters/_status'
      responses:
        default:
          description: A list of resources
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/GetMedicationResponseDTO'
  /epa/testdriver/api/v1/medication/render/eml/xhtml:
    get:
      tags:
        - Medication
      summary: Get a medication list (eML) rendered in xHTML of a personal health record.
      description: 'This operation executes the use case "List all medications" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getMedicationListAsXhtml
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: eML as XHTML
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMedicationListAsXhtmlResponseDTO'
  /epa/testdriver/api/v1/medication/render/eml/pdf:
    get:
      tags:
        - Medication
      summary: Get a medication list (eML) rendered as PDF/A of a personal health record.
      description: 'This operation executes the use case "List all medications" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getMedicationListAsPdf
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: eML as PDF/A
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetMedicationListAsPdfResponseDTO'
  /epa/testdriver/api/v1/audit:
    get:
      tags:
        - Audit Event
      summary: Get an audit event list of a personal health record as FHIR objects.
      description: 'This operation executes the use case "List Audit Events" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId". The Audit Events provided by the health record system are delivered.'
      operationId: getAuditEventListAsFHIRJson
      parameters:
        - $ref: '#/components/parameters/_recordId'
        - $ref: '#/components/parameters/auditSinceLastLogin'
        - $ref: '#/components/parameters/auditSince'
        - $ref: '#/components/parameters/auditUntil'
      responses:
        default:
          description: A list of resources
          content:
            application/fhir+json:
              schema:
                $ref: '#/components/schemas/GetAuditEventResponseDTO'
  /epa/testdriver/api/v1/audit/render/eml/xhtml:
    get:
      tags:
        - Audit Event
      summary: Get an audit event rendered in xHTML of a personal health record.
      description: 'This operation executes the use case "List all medications" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getAuditEventListAsXhtml
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: audit event list as XHTML
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuditEventListAsXhtmlResponseDTO'
  /epa/testdriver/api/v1/audit/render/eml/pdf:
    get:
      tags:
        - Audit Event
      summary: Get an audit event list rendered as PDF/A of a personal health record.
      description: 'This operation executes the use case "List all audit events" in an existing user session. By default, the health record of the user is addressed, otherwise the health record is identified by "recordId".'
      operationId: getAuditEventListAsPdf
      parameters:
        - $ref: '#/components/parameters/_recordId'
      responses:
        default:
          description: audit event list as PDF/A
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuditEventListAsPdfResponseDTO'
  /epa/testdriver/api/v1/emails:
    get:
      tags:
        - Email Address Management
      summary: Get a list of all email addresses
      description: Get a list of actual email addresses of an insurant
      operationId: getEmailAddresses
      responses:
        default:
          description: list of email addresses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEmailResponseDTO'
    post:
      tags:
        - Email Address Management
      summary: Set a single email address
      operationId: setEmailAddress
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostEmailRequestDTO'
      responses:
        default:
          description: response with an email address identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostEmailResponseDTO'
  '/epa/testdriver/api/v1/emails/{identifier}':
    parameters:
      - in: path
        name: identifier
        schema:
          $ref: '#/components/schemas/EmailIdentifierType'
        required: true
    delete:
      tags:
        - Email Address Management
      summary: Delete an email address
      operationId: deleteEmailAddress
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseDTO'
  /epa/testdriver/api/v1/productinformation:
    get:
      summary: Get Product Information
      description: The Operation provides a list of product information.
      operationId: getProductInformation
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductInformationResponseDTO'
components:
  parameters:
    _recordId:
      name: recordId
      in: query
      description: Determines optionally the health record for the operation
      schema:
        $ref: '#/components/schemas/KvnrType'
    _count:
      name: count
      in: query
      description: |
        With "_count", the client can specify the maximum number of elements to be included on 
        one "page" of the response. This means the Medication Service limits the result set to 
        this maximum specified number. If no value for "_count" is provided, the default value 
        set is "25".
      schema:
        type: integer
    _offset:
      name: offset
      in: query
      description: |
        This URL parameter indicates the (zero-based) offset of the first returned element in the collection. 
        If no value for "_offset" is provided, the default value set is "0".
      schema:
        type: integer
    _total:
      name: total
      in: query
      description: This parameter controls whether and how the AuditEvent Service returns the total number of search results.
      schema:
        type: string
    _id:
      name: id
      in: query
      required: false
      description: Refers to the logical id of the resource
      schema:
        type: string
    _lastUpdated:
      name: lastUpdated
      in: query
      required: false
      description: Can be used to select resources based on the last time they were changed
      schema:
        type: string
        format: date
    _identifier:
      name: identifier
      in: query
      required: false
      description: Returns resources with this external identifier
      schema:
        type: string
    _code:
      name: code
      in: query
      required: false
      description: Returns medications for a specific code
      schema:
        type: string
    _status:
      name: status
      in: query
      required: false
      description: Returns medications for this status
      schema:
        type: string
    vzdOrgType:
      name: type
      in: query
      description: Type of organization that have to be found
      schema:
        type: string
        enum:
          - hcpo
          - diga
      required: true
    vzdOrgName:
      name: name
      in: query
      description: Name used for the organization
      schema:
        type: string
    vzdOrgAlias:
      name: alias
      in: query
      description: 'Alternate name that the organization is known as, or was known as in the past'
      schema:
        type: string
    auditSinceLastLogin:
      name: sinceLastLogin
      in: query
      description: audit events since the last successful login
      schema:
        type: boolean
    auditSince:
      name: since
      in: query
      description: Audit events since the specific date. Can be used in combination with "until" query parameter
      schema:
        type: string
        format: date-time
    auditUntil:
      name: until
      in: query
      description: Audit events until the specific date. Can be used in combination with "since" query parameter
      schema:
        type: string
        format: date-time
    objectType:
      name: objectType
      in: query
      description: What type of values to filter on
      required: true
      schema:
        type: string
        enum:
          - document
          - folder
        default: document
    objectSelectorList:
      name: object
      in: query
      description: 'Select a list of objects identified by title, entry uuid or unique id'
      required: true
      schema:
        type: array
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/components/schemas/ObjectSelectorItem'
    insurantId:
      name: insurantId
      in: query
      description: Determines optionally the user used to establish the user session
      schema:
        $ref: '#/components/schemas/KvnrType'
    fqdn:
      name: fqdn
      in: query
      description: Determines optionally the FQDN of Access Gateway
      schema:
        type: string
    actorId:
      name: actorId
      in: query
      required: true
      description: Selected actor id to execute the operation
      schema:
        $ref: '#/components/schemas/ActorIdType'
    telematikId:
      name: telematikId
      in: query
      required: true
      description: Selected telematik id to execute the operation
      schema:
        $ref: '#/components/schemas/TelematikIdType'
    assignmentId:
      name: assignmentId
      in: query
      required: true
      description: Selected assignment id to execute the operation
      schema:
        $ref: '#/components/schemas/AssignmentIdType'
  schemas:
    RequestDTO:
      description: Determines optionally the health record for the operation
      type: object
      properties:
        recordId:
          $ref: '#/components/schemas/KvnrType'
    PostEntitlementRequestDTO:
      description: In case of ambiguous display names the telematikId is given
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          required:
            - hci
            - validTo
          properties:
            hci:
              anyOf:
                - $ref: '#/components/schemas/DisplayNameType'
                - $ref: '#/components/schemas/TelematikIdType'
            validTo:
              $ref: '#/components/schemas/DateTimeType'
    PostEntitlementRequestRepDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          required:
            - insurantId
            - email
            - displayName
          properties:
            insurantId:
              $ref: '#/components/schemas/KvnrType'
            email:
              type: string
              format: email
              example: name@example.com
            displayName:
              $ref: '#/components/schemas/DisplayNameType'
    PutBlockedUserRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - $ref: '#/components/schemas/OidAndDisplayname'
    PutConsentDecisionRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          required:
            - decision
          properties:
            decision:
              $ref: '#/components/schemas/DecisionType'
    PostConstraintRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          required:
            - denyPolicy
          properties:
            denyPolicy:
              $ref: '#/components/schemas/DenyPolicyAssignmentType'
    PutRegisteredDeviceRequestDTO:
      allOf:
        - type: object
          required:
            - displayName
          properties:
            displayName:
              $ref: '#/components/schemas/DisplayNameType'
    StoreDocumentRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          properties:
            documentSets:
              type: array
              items:
                $ref: '#/components/schemas/DocumentWithMetadata'
          required:
            - documentSets
    FindObjectsRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          description: 'The returnType ("leafClass" or "objectRef"), startIndex and maxResults are used to group the search results for paging.'
          properties:
            queryMetadata:
              $ref: '#/components/schemas/QueryMetadata'
            query:
              type: string
              enum:
                - FindDocuments
                - FindDocumentsByTitle
                - FindDocumentsByReferenceId
                - FindSubmissionSets
                - FindFolders
                - GetAll
                - GetDocuments
                - GetSubmissionSets
                - GetSubmissionSetAndContents
                - GetFoldersForDocument
                - GetFolderAndContents
              description: 'optional; if no stored query is set, the FdV has to choose an appropriate one according to the given search parameters.'
            returnType:
              type: string
              enum:
                - LeafClass
                - ObjectRef
              default: LeafClass
    UpdateMetadataRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          properties:
            object:
              $ref: '#/components/schemas/ObjectSelectorItem'
            documentMetadata:
              $ref: '#/components/schemas/DocumentMetadata'
          required:
            - object
            - documentMetadata
    ReplaceDocumentRequestDTO:
      allOf:
        - $ref: '#/components/schemas/RequestDTO'
        - type: object
          properties:
            object:
              $ref: '#/components/schemas/ObjectSelectorItem'
            documentWithMetadata:
              $ref: '#/components/schemas/DocumentWithMetadata'
          required:
            - object
            - documentWithMetadata
    PostEmailRequestDTO:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/EmailAddressType'
      required:
        - email
    ResponseDTO:
      description: 'Return of the success status, whether the operation on the service interface of Health Record System was successful or not. In any error case the status message, containing the error indication (e.g. error code) is given.'
      type: object
      properties:
        success:
          type: boolean
        statusMessage:
          type: string
      required:
        - success
    LoginResponseDTO:
      description: Returns the insurant id of the user that has logged in
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - insurantId
          properties:
            insurantId:
              $ref: '#/components/schemas/KvnrType'
    GetEntitlementListResponseDTO:
      description: Returns a list of all entitlements
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - entitlements
          properties:
            entitlements:
              type: array
              items:
                $ref: '#/components/schemas/Entitlement'
    GetBlockedUserListResponseDTO:
      description: Returns a list of all blocked users
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - assignments
          properties:
            assignments:
              type: array
              items:
                allOf:
                  - $ref: '#/components/schemas/Assignment'
                  - type: object
                    required:
                      - at
                    properties:
                      at:
                        description: Creation timestamp
                        allOf:
                          - $ref: '#/components/schemas/DateTimeType'
    PostEntitlementResponseDTO:
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - entitlement
          properties:
            entitlement:
              $ref: '#/components/schemas/Entitlement'
    GetConsentDecisionListResponseDTO:
      description: Returns a list of all current consent decisions
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - consentDecisions
          properties:
            consentDecisions:
              type: array
              items:
                $ref: '#/components/schemas/ConsentDecision'
    GetConstraintsResponseDTO:
      description: Returns a combined list of deny policies
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - denyPolicies
          properties:
            denyPolicies:
              type: array
              items:
                $ref: '#/components/schemas/DenyPolicyAssignmentResponseType'
    GetRegisteredDevicesResponseDTO:
      description: Returns a list of all registered devices
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          required:
            - devices
          properties:
            devices:
              type: array
              items:
                $ref: '#/components/schemas/DeviceType'
    GetMedicationResponseDTO:
      description: Returns a list of all medications using the FHIR representation as string array where the content is JSON
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          oneOf:
            - $ref: '#/components/schemas/SearchSet_Bundle'
            - type: object
              properties:
                medications:
                  description: 'https://gematik.de/fhir/epa-medication/StructureDefinition/epa-medication'
                  x-examples:
                    Example 1: '--> https://gematik.de/fhir/epa-medication/StructureDefinition/epa-medication'
                  type: array
                  items:
                    type: string
    GetMedicationListAsPdfResponseDTO:
      description: Response including the eML as PDF/A.
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            eml:
              description: The eML as PDF/A as an array of bytes.
              type: string
              format: byte
    GetMedicationListAsXhtmlResponseDTO:
      description: Response including the eML as XHTML.
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            eml:
              description: The eML as XHTML as string.
              type: string
    GetAuditEventResponseDTO:
      description: Returns a list of all audit events using the FHIR representation as string array where the content is JSON
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - $ref: '#/components/schemas/AuditEventList'
    GetAuditEventListAsPdfResponseDTO:
      description: Response including the audit event list as PDF/A.
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            events:
              description: The audit event list as PDF/A as an array of bytes.
              type: string
              format: byte
    GetAuditEventListAsXhtmlResponseDTO:
      description: Response including the audit event list as XHTML.
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            events:
              description: The audit event list as XHTML as string.
              type: string
    RetrieveDocumentsResponseDTO:
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            documents:
              type: array
              items:
                $ref: '#/components/schemas/Document'
    FindObjectsResponseDTO:
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          title: ''
          properties:
            registryObjectLists:
              $ref: '#/components/schemas/RegistryObjectLists'
          x-examples:
            example-1:
              success: true
              statusMessage: string
              registryObjectLists:
                submissionSetMetadata:
                  - author:
                      identifier: '165746304'
                      familyName: Weber
                      givenName: Thilo
                      otherName: string
                      nameAffix: string
                      title: Dr.
                      authorInstitution:
                        - name: string
                          identifier: string
                      authorRole:
                        - string
                      authorSpecialty:
                        - string
                      authorTelecommunication:
                        - string
                    comments: string
                    contentTypeCode: string
                    submissionTime: '2017-07-21T17:32:28Z'
                    entryUUID: string
                    uniqueId: string
                documentsMetadata:
                  - author:
                      - identifier: '165746304'
                        familyName: Weber
                        givenName: Thilo
                        otherName: string
                        nameAffix: string
                        title: Dr.
                        authorInstitution:
                          - name: string
                            identifier: string
                        authorRole:
                          - string
                        authorSpecialty:
                          - string
                        authorTelecommunication:
                          - string
                    availabilityStatus: string
                    confidentialityCode:
                      - string
                    classCode: string
                    comments: string
                    creationTime: '2017-07-21T17:32:28Z'
                    entryUUID: string
                    eventCodeList:
                      - string
                    formatCode: string
                    hash: string
                    healthcareFacilityTypeCode: string
                    languageCode: string
                    legalAuthenticator: string
                    mimeType: application/pdf
                    practiceSettingCode: string
                    referenceIdList:
                      - string
                    serviceStartTime: '2017-07-21T17:32:28Z'
                    serviceStopTime: '2017-07-21T17:32:28Z'
                    size: 0
                    title: string
                    typeCode: string
                    uniqueId: string
                    uri: string
                foldersMetadata:
                  - comments: string
                    codeList:
                      - string
                    lastUpdateTime: '2017-07-21T17:32:28Z'
                    title: string
                    uniqueId: string
                    entryUUID: Folder-1
                    availabilityStatus: 'urn:oasis:names:tc:ebxml-regrep:StatusType:Approved, Approved'
                associations:
                  - id: 'urn:uuid:7804b22f-7400-4fd7-a4de-d6a5cdd8352d'
                    associationType: HasMember
                    sourceObject: 'urn:uuid:32ec5972-a5a3-4dab-8322-e46c56656d70'
                    targetObject: 'urn:uuid:3277f905-6550-4160-bd3b-c8e4fdc70611'
    FindDirectoryResponseDTO:
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            directoryEntries:
              type: array
              items:
                $ref: '#/components/schemas/DirectoryEntryWithCertificates'
    GetEmailResponseDTO:
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - type: object
          properties:
            emailAddresses:
              type: array
              items:
                $ref: '#/components/schemas/EmailResponseType'
    PostEmailResponseDTO:
      allOf:
        - $ref: '#/components/schemas/ResponseDTO'
        - $ref: '#/components/schemas/EmailIdentifierType'
    ProductInformationResponseDTO:
      type: object
      description: product information of epa fdv
      properties:
        producerId:
          type: string
          maxLength: 5
          description: manufacturer ID
        productVersion:
          type: string
          maxLength: 12
          description: product version
          example: 1.0.0-0
        productType:
          type: string
          description: 'product Type, GS-A_3702'
        productTypeVersion:
          type: string
          description: 'product Type Version, GS-A_3702'
        productIdentification:
          type: string
          description: 'Product identification, GS-A_3702'
        timeStamp:
          type: string
          format: date-time
          description: 'date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
      required:
        - productVersion
        - productType
        - productTypeVersion
    AuthorInstitution:
      type: object
      description: 'Institution, which is related to the author'
      properties:
        name:
          type: string
          description: Name of LEI or insurance
        identifier:
          type: string
          description: ID of LEI or insurance
    Author:
      type: object
      description: 'provides Set of Meta data for author. In case of DocumentEntry is this the author of the document, in case of Submission Set the providing person or system.'
      properties:
        identifier:
          type: string
          description: 'authorPerson, for LE "Lebenslange Identifikationsnummer eines Arztes", for insurant the insurantID'
          example: '165746304'
        familyName:
          type: string
          description: 'authorPerson, surname'
          example: Weber
        givenName:
          type: string
          description: 'authorPerson, given name'
          example: Thilo
        otherName:
          type: string
          description: 'authorPerson, other given name'
        nameAffix:
          type: string
          description: 'authorPerson, name affix'
        title:
          type: string
          description: 'authorPerson, title'
          example: Dr.
        authorInstitution:
          type: array
          items:
            $ref: '#/components/schemas/AuthorInstitution'
        authorRole:
          type: array
          items:
            type: string
            description: Rule of Author; a code of Value Sets for documentEntry.authorRole.
        authorSpecialty:
          type: array
          items:
            type: string
            description: A code of Value Sets for DocumentEntry.authorSpecialty
        authorTelecommunication:
          type: array
          items:
            type: string
            description: telecommunication data of author
    SubmissionSetMetadata:
      type: object
      description: Provides a set of meta data for submission set
      x-examples:
        example-1:
          author:
            identifier: '165746304'
            familyName: Weber
            givenName: Thilo
            otherName: string
            nameAffix: string
            title: Dr.
            authorInstitution:
              - name: string
                identifier: string
            authorRole:
              - string
            authorSpecialty:
              - string
            authorTelecommunication:
              - string
          comments: string
          contentTypeCode: string
          submissionTime: '2017-07-21T17:32:28Z'
          entryUUID: string
          uniqueId: string
      properties:
        author:
          $ref: '#/components/schemas/Author'
        comments:
          type: string
          description: additional notes in free text
        contentTypeCode:
          type: string
        submissionTime:
          type: string
          format: date-time
          description: 'date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        entryUUID:
          type: string
          description: 'Entry UUID of the Submission Set, intern'
        uniqueId:
          type: string
          description: 'Unique ID of the Submission Set, extern'
      title: ''
    DocumentWithMetadata:
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/DocumentMetadata'
        document:
          $ref: '#/components/schemas/Document'
      required:
        - metadata
        - document
      x-examples: {}
    Document:
      type: object
      properties:
        document:
          type: string
          format: byte
          description: Document (Base64 encoded)
      required:
        - document
    DocumentMetadata:
      type: object
      description: meta data of document
      properties:
        author:
          type: array
          items:
            $ref: '#/components/schemas/Author'
        availabilityStatus:
          type: string
          description: Status of document
        confidentialityCode:
          type: array
          items:
            type: string
            description: Code out of Value Set for DocumentEntry.confidentialityCode
        classCode:
          type: string
          description: Code out of Value Set for DocumentEntry.classCode
        comments:
          type: string
          description: additional notes in free text
        creationTime:
          type: string
          format: date-time
          description: 'Creation time; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        entryUUID:
          type: string
          description: EntryUUID of a document
        eventCodeList:
          type: array
          description: 'Events, which lead to creation of the document, Code out of Value Set for DocumentEntry.eventCodeList or table in A_17540-XX'
          items:
            type: string
        formatCode:
          type: string
          description: Code out of Value Set for DocumentEntry.formatCode or table in A_14761-XX
        hash:
          type: string
        healthcareFacilityTypeCode:
          type: string
          description: Code out of Value Set for DocumentEntry.healthcareFacilityTypeCode
        languageCode:
          type: string
          description: Code out of Value Set for DocumentEntry.languageCode
        legalAuthenticator:
          type: string
          description: legally responsible party
        mimeType:
          type: string
          enum:
            - application/pdf
            - image/jpeg
            - image/png
            - image/tiff
            - text/plain
            - text/rtf
            - application/xml
            - application/hl7-v3
            - application/pkcs7-mime
            - application/fhir+xml
            - application/xacml+xml
          description: MIME-Type des Dokuments
        practiceSettingCode:
          type: string
          description: Code out of Value Set for DocumentEntry.practiceSettingCode or table in A_16944-XX
        referenceIdList:
          type: array
          description: List of id associated with the document
          items:
            type: string
        serviceStartTime:
          type: string
          format: date-time
          description: 'Date of time, start of treatment; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        serviceStopTime:
          type: string
          format: date-time
          description: 'Date of time, end of treatment;; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        size:
          type: integer
          description: Size of document in bytes
        title:
          type: string
          description: Title of document
        typeCode:
          type: string
          description: Sort of document; Code out of Value Set for DocumentEntry.typeCode
        uniqueId:
          type: string
          description: Unique identification of document
        uri:
          type: string
          description: File name
      x-examples:
        example-1:
          author:
            - identifier: '165746304'
              familyName: Weber
              givenName: Thilo
              otherName: string
              nameAffix: string
              title: Dr.
              authorInstitution:
                - name: string
                  identifier: string
              authorRole:
                - string
              authorSpecialty:
                - string
              authorTelecommunication:
                - string
          availabilityStatus: string
          confidentialityCode:
            - string
          classCode: string
          comments: string
          creationTime: '2017-07-21T17:32:28Z'
          entryUUID: 'urn:uuid:3277f905-6550-4160-bd3b-c8e4fdc70611'
          eventCodeList:
            - string
          formatCode: string
          hash: string
          healthcareFacilityTypeCode: string
          languageCode: string
          legalAuthenticator: string
          mimeType: application/pdf
          practiceSettingCode: string
          referenceIdList:
            - string
          serviceStartTime: '2017-07-21T17:32:28Z'
          serviceStopTime: '2017-07-21T17:32:28Z'
          size: 0
          title: string
          typeCode: string
          uniqueId: string
          uri: string
    FolderMetadata:
      type: object
      description: Meta data of a folder
      x-examples:
        childsrecord Folder Beispiel:
          value:
            comments: Ein Dokument als childsrecord Beispiel
            codeList:
              - ('childsrecord^^1.2.276.0.76.5.512')
            lastUpdateTime: '2017-07-21T17:32:28Z'
            title: Erika Mustermann
            uniqueId: f9802a8d5a8d4cb0b1b38610305e12f4
            entryUUID: Folder-ea72d10d90
            status: 'urn:oasis:names:tc:ebxml-regrep:StatusType:Approved'
        patientdoc Folder Beispiel:
          value:
            comments: Patient Document Folder
            codeList:
              - ('childsrecord^^1.2.276.0.76.5.512')
            lastUpdateTime: '2021-01-01T17:32:28Z'
            title: vom Versicherten eingestellte Dokumente
            uniqueId: f9802a8d5a8d4cb0b1b38610305e12f4
            entryUUID: Folder-fa72d10d91
            status: Approved
      properties:
        comments:
          type: string
          description: ErgÃ¤nzende Hinweise in Freitext
        codeList:
          type: array
          description: 'Liste von Codes, die mit dem Ordner assoziiert werden.'
          items:
            type: string
        lastUpdateTime:
          type: string
          format: date-time
          description: 'Zeitstempel, an dem der Ordner das letzte mal geÃ¤ndert wurde; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        title:
          type: string
          description: Titel des Ordner
        uniqueId:
          type: string
          description: Eindeutige Kennung des Ordner (von Client erzeugt)
        entryUUID:
          type: string
          description: Eindeutige Kennung des Ordner in der Registry (von Aktensystem gesetzt)
          example: Folder-1
        availabilityStatus:
          type: string
          example: 'urn:oasis:names:tc:ebxml-regrep:StatusType:Approved, Approved'
          description: Status der Ordner
    Association:
      type: object
      description: Association
      x-examples:
        example-1:
          id: string
          associationType: HasMember
          sourceObject: string
          targetObject: string
        example-2:
          id: 'urn:uuid:7804b22f-7400-4fd7-a4de-d6a5cdd8352d'
          associationType: 'urn:oasis:names:tc:ebxml-regrep:AssociationType:HasMember'
          sourceObject: 'urn:uuid:32ec5972-a5a3-4dab-8322-e46c56656d70'
          targetObject: 'urn:uuid:3277f905-6550-4160-bd3b-c8e4fdc70611'
      title: Association
      properties:
        id:
          type: string
          description: Eindeutige Kennung der Assoziation in der Registry
          example: 'urn:uuid:7804b22f-7400-4fd7-a4de-d6a5cdd8352d'
        associationType:
          type: string
          description: 'Association Type aus IHE_ITI_TF_Vol3.pdf, Tabelle 4.2.2-1. Angabe mit und ohne den urn:* Prefix valide. Siehe Beispiele '
          example: HasMember
        sourceObject:
          type: string
          description: Eindeutige Kennung des Quell-Objekts der Assoziation
          example: 'urn:uuid:32ec5972-a5a3-4dab-8322-e46c56656d70'
        targetObject:
          type: string
          description: Eindeutige Kennung des Ziel-Objekts der Assoziation
          example: 'urn:uuid:3277f905-6550-4160-bd3b-c8e4fdc70611'
    QueryMetadata:
      type: object
      description: 'Metadaten Parameter fÃ¼r die Suche nach Dokumenten, Ordner, Submission Sets und VerknÃ¼pfungen'
      properties:
        XDSSubmissionSetEntryUUID:
          type: array
          description: Liste von EntryUUIDs von SubmissionSets
          items:
            type: string
        XDSSubmissionSetUniqueId:
          type: array
          description: Liste von uniqueIDs von SubmissionSets
          items:
            type: string
        XDSSubmissionSetSubmissionTimeFrom:
          type: string
          format: date-time
          description: 'Beginn Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSSubmissionSetSubmissionTimeTo:
          type: string
          format: date-time
          description: 'XDSDocumentEntryCreationTimeTo, Ende Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryEntryUUID:
          type: array
          description: Liste von EntryUUIDs von Dokumenten
          items:
            type: string
        XDSDocumentEntryUniqueId:
          type: array
          description: Liste von uniqueIds von Dokumenten
          items:
            type: string
        XDSDocumentEntryReferenceIdList:
          type: array
          description: Liste von rootDocumentUniqueIds
          items:
            type: string
        XDSDocumentEntryClassCode:
          type: array
          items:
            type: string
            description: XDSDocumentEntryClassCode
        XDSDocumentEntryPracticeSettingCode:
          type: array
          items:
            type: string
            description: XDSDocumentEntryPracticeSettingCode
        XDSDocumentEntryCreationTimeFrom:
          type: string
          format: date-time
          description: 'Beginn Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryCreationTimeTo:
          type: string
          format: date-time
          description: 'Ende Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryServiceStartTimeFrom:
          type: string
          format: date-time
          description: 'Zeitpunkt, an dem das im Dokument dokumentierte (Behandlungs-)Ereignis begonnen wurde. Beginn Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryServiceStartTimeTo:
          type: string
          format: date-time
          description: 'Zeitpunkt, an dem das im Dokument dokumentierte (Behandlungs-)Ereignis begonnen wurde. Ende Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryServiceStopTimeFrom:
          type: string
          format: date-time
          description: 'Zeitpunkt, an dem das im Dokument dokumentierte (Behandlungs-)Ereignis beendet wurde. Beginn Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryServiceStopTimeTo:
          type: string
          format: date-time
          description: 'Zeitpunkt, an dem das im Dokument dokumentierte (Behandlungs-)Ereignis beendet wurde. Ende Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6'
          example: '2017-07-21T17:32:28Z'
        XDSDocumentEntryHealthcareFacilityTypeCode:
          type: array
          items:
            type: string
            description: 'Art der Einrichtung, in der das dokumentierte Ereignis stattgefunden hat.;       ein Code des in [IHE-ITI-VS] definierten Value Sets fÃ¼r DocumentEntry.healthcareFacilityTypeCode'
        XDSDocumentEntryEventCodeList:
          type: array
          items:
            type: string
            description: 'Ereignisse, die zur Erstellung des Dokuments gefÃ¼hrt haben.'
        XDSDocumentEntryConfidentialityCode:
          type: array
          items:
            type: string
            description: 'Vertraulichkeitskennzeichnung des Dokuments; N, R, oder V des in [IHE-ITI-VS] definierten Value Sets fÃ¼r DocumentEntry.confidentialityCode'
        XDSDocumentEntryAuthorPerson:
          type: array
          items:
            type: string
            description: Name des Autors
        XDSDocumentEntryFormatCode:
          type: array
          items:
            type: string
            description: 'Global eindeutiger Code fÃ¼r das Dokumentenformat; ein Code des in [IHE-ITI-VS] definierten Value Sets fÃ¼r DocumentEntry.formatCode oder aus der Tabelle in A_14761-XX'
        XDSDocumentEntryTypeCode:
          type: array
          items:
            type: string
            description: Art des Dokumentes
        XDSDocumentEntryTitle:
          type: array
          items:
            type: string
        XDSDocumentEntryAuthorInstitution:
          type: array
          items:
            type: string
            description: 'Institution, die dem Autor zugeordnet ist; nur anwendbar mit FindDocumentsByTitle'
        XDSDocumentEntryStatus:
          type: string
          description: Status des Dokumentes
        XDSFolderUniqueId:
          description: Folder Unique Id
          type: string
        XDSFolderStatus:
          type: string
          description: Status der Ordner; nur anwendbar mit FindFolders
        XDSFolderCodeList:
          type: array
          description: 'Liste von Codes (z.B. ''childrecord'', ''patientdoc'')'
          items:
            type: string
            description: Code eines Ordners; nur anwendbar mit FindFolders
        XDSFolderLastUpdateTimeFrom:
          type: string
          format: date-time
          description: 'Beginn Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6; nur anwendbar mit FindFolders'
          example: '2017-07-21T17:32:28Z'
        XDSFolderLastUpdateTimeTo:
          type: string
          format: date-time
          description: 'Ende Zeitraum fÃ¼r Suche; date-time notation as defined by RFC 3339, section 5.6; nur anwendbar mit FindFolders'
          example: '2017-07-21T17:32:28Z'
        XDSFolderEntryUUID:
          type: string
          description: Folder UUID
    RegistryObjectLists:
      type: object
      title: RegistryObjectLists
      x-examples:
        example-1:
          submissionSetsMetadata:
            - author:
                identifier: '165746304'
                familyName: Weber
                givenName: Thilo
                otherName: string
                nameAffix: string
                title: Dr.
                authorInstitution:
                  - name: string
                    identifier: string
                authorRole:
                  - string
                authorSpecialty:
                  - string
                authorTelecommunication:
                  - string
              comments: string
              contentTypeCode: string
              submissionTime: '2017-07-21T17:32:28Z'
              entryUUID: string
              uniqueId: string
          documentsMetadata:
            - author:
                - identifier: '165746304'
                  familyName: Weber
                  givenName: Thilo
                  otherName: string
                  nameAffix: string
                  title: Dr.
                  authorInstitution:
                    - name: string
                      identifier: string
                  authorRole:
                    - string
                  authorSpecialty:
                    - string
                  authorTelecommunication:
                    - string
              availabilityStatus: string
              confidentialityCode:
                - string
              classCode: string
              comments: string
              creationTime: '2017-07-21T17:32:28Z'
              entryUUID: string
              eventCodeList:
                - string
              formatCode: string
              hash: string
              healthcareFacilityTypeCode: string
              languageCode: string
              legalAuthenticator: string
              mimeType: application/pdf
              practiceSettingCode: string
              referenceIdList:
                - string
              serviceStartTime: '2017-07-21T17:32:28Z'
              serviceStopTime: '2017-07-21T17:32:28Z'
              size: 0
              title: string
              typeCode: string
              uniqueId: string
              uri: string
          foldersMetadata:
            - comments: string
              codeList:
                - string
              lastUpdateTime: '2017-07-21T17:32:28Z'
              title: string
              uniqueId: string
              entryUUID: Folder-1
              availabilityStatus: 'urn:oasis:names:tc:ebxml-regrep:StatusType:Approved, Approved'
          associations:
            - id: 'urn:uuid:7804b22f-7400-4fd7-a4de-d6a5cdd8352d'
              associationType: HasMember
              sourceObject: 'urn:uuid:32ec5972-a5a3-4dab-8322-e46c56656d70'
              targetObject: 'urn:uuid:3277f905-6550-4160-bd3b-c8e4fdc70611'
      properties:
        submissionSetsMetadata:
          type: array
          items:
            $ref: '#/components/schemas/SubmissionSetMetadata'
        documentsMetadata:
          type: array
          items:
            $ref: '#/components/schemas/DocumentMetadata'
        foldersMetadata:
          type: array
          items:
            $ref: '#/components/schemas/FolderMetadata'
        associations:
          type: array
          items:
            $ref: '#/components/schemas/Association'
    DirectoryEntry:
      type: object
      properties:
        cn:
          type: string
          description: 'commonName, vollstaendiger Name'
        displayName:
          type: string
          description: Anzeigename
        streetAddress:
          type: string
          description: Strasse und Hausnummer
          example: Friedrichstrasse 136
        postalCode:
          type: string
          description: Postleitzahl
          example: '10117'
        localityName:
          type: string
          description: Ort
          example: Berlin
        stateOrProvinceName:
          type: string
          description: Bundesland
          example: Berlin
        organization:
          type: string
          description: Institutionsname
        professionOID:
          type: string
          description: 'fÃ¼r LEI: Institution'
        specialization:
          type: string
          description: 'fÃ¼r LEI: Fachgebiet'
        domainID:
          type: string
          description: 'fÃ¼r KTR: KostentrÃ¤gerkennung'
        telematikId:
          type: string
          description: eindeutige ID der Institution in der TI
    DirectoryEntryWithCertificates:
      type: object
      properties:
        directoryEntry:
          $ref: '#/components/schemas/DirectoryEntry'
        certificates:
          type: array
          maxItems: 50
          minItems: 0
          items:
            type: string
            format: byte
            description: 'VerSchlÃ¼sselungszertifikat der Institution (Format DER, Base64 kodiert)'
      required:
        - directoryEntry
        - certificates
    ActorIdType:
      description: Identifier of an actor (kvnr or telematik-id)
      oneOf:
        - $ref: '#/components/schemas/KvnrType'
        - $ref: '#/components/schemas/TelematikIdType'
    KvnrType:
      type: string
      pattern: '^[A-Z]{1}\d{9}$'
      example: Z123456789
    TelematikIdType:
      type: string
      pattern: '^[1-9][0-9]?-[\x21-\x7E]+$'
      maxLength: 128
      example: 2-883110000118994
    OidType:
      description: A professionOID
      type: string
      pattern: '([0-2])((\.0)|(\.[1-9][0-9]*))*$'
      example: 1.2.276.0.76.4.50
    DisplayNameType:
      description: A readable name
      type: string
      example: Praxis Dr. Annamaria HeckhausÃ©n
    DateType:
      type: string
      format: date
      example: '2025-12-31'
    DateTimeType:
      type: string
      format: date-time
      example: '2025-01-01T18:00:00Z'
    FunctionIdType:
      type: string
      description: function id of consent related functions of a health record.
    DecisionType:
      type: string
      enum:
        - permit
        - deny
      description: Decision
    UuidType:
      description: An urn-encoded UUID
      type: string
      example: 'urn:uuid:4fa70820-2384-4001-80a9-7bbd5e085efb'
    RootDocumentIdType:
      description: |
        A CXi style identifier with schema 'uniqueID^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId' with symbolic UUID as uniqueId
      type: string
      example: '4fa70820-2384-4001-80a9-7bbd5e085efb^^^^urn:gematik:iti:xds:2023:rootDocumentUniqueId'
    AssignmentIdType:
      description: Server-assigned unique uuid of a particular deny policy assignment
      type: string
      format: uuid
      example: fa2bc929-f6c9-419f-ae75-cea040927651
    CategoryIdType:
      description: A technical identifier of a category
      type: string
      enum:
        - reports
        - emp
        - emergency
        - eab
        - dental
        - child
        - pregnancy_childbirth
        - vaccination
        - patient
        - receipt
        - care
        - eau
        - rehab
        - diga
        - transcripts
        - other
    Entitlement:
      description: 'Information Ã¼ber ein Befugnis welche eingestellt, gelÃ¶scht oder aufgelistet wird'
      type: object
      required:
        - actorId
        - oid
        - displayName
      properties:
        actorId:
          $ref: '#/components/schemas/ActorIdType'
        oid:
          $ref: '#/components/schemas/OidType'
        displayName:
          $ref: '#/components/schemas/DisplayNameType'
        validTo:
          description: end of the validity
          allOf:
            - $ref: '#/components/schemas/DateTimeType'
        issued:
          type: object
          required:
            - at
            - actorId
            - displayName
          properties:
            at:
              description: Creation timestamp
              allOf:
                - $ref: '#/components/schemas/DateTimeType'
            actorId:
              $ref: '#/components/schemas/ActorIdType'
            displayName:
              $ref: '#/components/schemas/DisplayNameType'
    Assignment:
      description: Properties of one blocked user
      type: object
      allOf:
        - $ref: '#/components/schemas/OidAndDisplayname'
        - type: object
          properties:
            telematikId:
              $ref: '#/components/schemas/TelematikIdType'
          required:
            - telematikId
    OidAndDisplayname:
      description: Properties to block one user
      type: object
      required:
        - oid
        - displayName
      properties:
        oid:
          $ref: '#/components/schemas/OidType'
        displayName:
          $ref: '#/components/schemas/DisplayNameType'
    ConsentDecision:
      description: Consent Decisions Response
      type: object
      required:
        - functionId
        - decision
      properties:
        functionId:
          $ref: '#/components/schemas/FunctionIdType'
        decision:
          $ref: '#/components/schemas/DecisionType'
    DenyPolicyAssignmentType:
      description: Basic type for a deny policy assignments.
      oneOf:
        - $ref: '#/components/schemas/GDPolicyAssignmentForDocumentType'
        - $ref: '#/components/schemas/GDPolicyAssignmentForFolderType'
        - $ref: '#/components/schemas/GDPolicyAssignmentForCategoryType'
    DenyPolicyAssignmentResponseType:
      description: Basic type for a deny policy response.
      allOf:
        - type: object
          properties:
            assignmentId:
              allOf:
                - $ref: '#/components/schemas/AssignmentIdType'
        - oneOf:
            - $ref: '#/components/schemas/GDPolicyAssignmentForDocumentType'
            - $ref: '#/components/schemas/GDPolicyAssignmentForFolderType'
            - $ref: '#/components/schemas/GDPolicyAssignmentForCategoryType'
    GDPolicyAssignmentForCategoryType:
      description: Global deny policy assigment for a single category.
      type: object
      properties:
        for:
          type: string
          enum:
            - category
        parameters:
          type: object
          required:
            - categoryId
          properties:
            categoryId:
              allOf:
                - $ref: '#/components/schemas/CategoryIdType'
              description: technical identifier of category
          additionalProperties: false
      additionalProperties: false
    GDPolicyAssignmentForDocumentType:
      description: Global deny policy assigment for a single document.
      type: object
      properties:
        for:
          type: string
          enum:
            - document
        parameters:
          type: object
          required:
            - rootDocumentId
          properties:
            rootDocumentId:
              allOf:
                - $ref: '#/components/schemas/RootDocumentIdType'
              description: rootDocumentUniqueId from DocumentEntry.referenceIdList
          additionalProperties: false
      additionalProperties: false
    GDPolicyAssignmentForFolderType:
      description: Global deny policy assigment for a single folder.
      type: object
      properties:
        for:
          type: string
          enum:
            - folder
        parameters:
          type: object
          required:
            - folderUUID
          properties:
            folderUUID:
              allOf:
                - $ref: '#/components/schemas/UuidType'
              description: Folder.entryUUID
          additionalProperties: false
      additionalProperties: false
    DeviceIdentifierType:
      type: string
      format: uuid
      description: Unique identifier of a device registration
      example: 74f09dbc-9268-411f-81e7-f1e4f3fb1b4f
    DeviceStatusType:
      description: current status of device registration
      type: string
      enum:
        - pending
        - verified
      example: verified
    BaseDeviceType:
      type: object
      properties:
        deviceIdentifier:
          $ref: '#/components/schemas/DeviceIdentifierType'
        status:
          allOf:
            - $ref: '#/components/schemas/DeviceStatusType'
          example: verified
        displayName:
          $ref: '#/components/schemas/DisplayNameType'
        createdAt:
          description: timestamp of registration
          type: string
          format: date-time
    DeviceType:
      allOf:
        - $ref: '#/components/schemas/BaseDeviceType'
        - type: object
          properties:
            lastLogin:
              description: timestamp of last login associated to the registered device
              type: string
              format: date-time
    SearchSet_Bundle:
      description: 'Contains a collection of resources + Rule: entry.search only when a search'
      type: object
      properties:
        resourceType:
          type: string
          enum:
            - Bundle
        id:
          description: 'The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.'
          type: string
          pattern: '[A-Za-z0-9\-\.]{1,64}'
          example: 86604fc1-b356-57e3-8738-8ef36c8d608c
        meta:
          type: object
          properties:
            lastUpdated:
              description: When the resource last changed - e.g. when the version changed.
              type: string
              format: date-time
        type:
          type: string
          enum:
            - searchset
        total:
          type: integer
          minimum: 0
          example: 1
        link:
          type: array
          items:
            type: object
            properties:
              relation:
                type: string
                enum:
                  - self
                  - next
                  - previous
                  - first
                  - last
              url:
                type: string
                description: 'Reference details for the link, A Uniform Resource Locator (RFC 1738 ). Note URLs are accessed directly using the specified protocol. Common URL protocols are http{s}.'
        entry:
          type: array
          items:
            type: object
            properties:
              fullUrl:
                type: string
                description: URI for resource (Absolute URL server address or URI for UUID/OID)
              search:
                type: object
                description: Search related information
                properties:
                  mode:
                    type: string
                    description: match | include | outcome - why this is in the result set
                    enum:
                      - match
                      - include
                      - outcome
                    example: match
    Organization:
      type: object
      description: 'https://gematik.de/fhir/directory/StructureDefinition/OrganizationDirectory'
      x-examples:
        Example 1: '--> https://gematik.de/fhir/directory/StructureDefinition/OrganizationDirectory'
    OrganizationList:
      allOf:
        - $ref: '#/components/schemas/SearchSet_Bundle'
        - type: object
          properties:
            entry:
              type: array
              items:
                type: object
                properties:
                  resource:
                    $ref: '#/components/schemas/Organization'
    Medication:
      type: object
      description: 'https://gematik.de/fhir/epa-medication/StructureDefinition/epa-medication'
      x-examples:
        Example 1: '--> https://gematik.de/fhir/epa-medication/StructureDefinition/epa-medication'
    MedicationList:
      allOf:
        - $ref: '#/components/schemas/SearchSet_Bundle'
        - type: object
          properties:
            entry:
              type: array
              items:
                type: object
                properties:
                  resource:
                    $ref: '#/components/schemas/Medication'
    AuditEvent:
      type: object
      description: 'https://gematik.de/fhir/epa/StructureDefinition/audit-event'
      x-examples:
        Example 1: '--> https://gematik.de/fhir/epa/StructureDefinition/audit-event'
    AuditEventList:
      allOf:
        - $ref: '#/components/schemas/SearchSet_Bundle'
        - type: object
          properties:
            entry:
              type: array
              items:
                type: object
                properties:
                  resource:
                    $ref: '#/components/schemas/AuditEvent'
    ObjectSelectorItem:
      oneOf:
        - $ref: '#/components/schemas/Title'
        - $ref: '#/components/schemas/EntryUUID'
        - $ref: '#/components/schemas/UniqueId'
      x-examples:
        Example 1:
          title: string
    Title:
      type: object
      properties:
        title:
          type: string
      x-examples:
        Example 1:
          title: string
    EntryUUID:
      type: object
      properties:
        entryUUID:
          type: string
      x-examples:
        Example 2:
          entryUUID: string
    UniqueId:
      type: object
      x-examples:
        Example 1:
          uniqueId: string
      properties:
        uniqueId:
          type: string
    EmailAddressType:
      type: string
      description: email address
      format: email
      example: name@example.com
    EmailIdentifierType:
      type: string
      description: Unique identifier of an email
      example: '0815'
    EmailType:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/EmailAddressType'
        actor:
          description: creator of the email address - name of user session
          type: string
          example: Betriebskrankenkasse ABC
        createdAt:
          description: timestamp of email registration
          type: string
          format: date-time
          example: '2025-04-22T14:23:01Z'
      required:
        - email
        - actor
        - createdAt
    EmailResponseType:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/EmailIdentifierType'
        emailType:
          $ref: '#/components/schemas/EmailType'
      required:
        - identifier
        - emailType

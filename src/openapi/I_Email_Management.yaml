openapi: 3.0.3
info:
  title: I_Email_Management
  description: |
    This interface provides access to the service **Email Management** for insurants and insurance.<br/>
    
    **General conditions**:</br> 
    For all operations if applicable:
    - a section _Client_ in operation descriptions covers recommendations (informative) for clients.
    - a section _Provider_ in operation descriptions covers requirements for the server side. 
    - error responses may be extended by helpful information about the error condition in _errorDetail_

    **Prerequisites**:</br>
    The User Session shall provide 
    - name
    - role ((profession-)oid)
    - identifier (kvnr)

    of the current user (requestor) for evaluation in operations.

    All operations of this service mandate a VAU-channel and an authorized user session.</br>
    If the service Email Management is used by insurance, the management is only allowed for insurants hosted by the insurance itself. 
    For access by ePA-FdV a device registration for the device used is required.

    **User Agent**:</br>
    The user agent information (x-useragent) is part of any request, even if 
    not essentially required for the operation (e.g. raw-data collection), and
    may be considered for provider internal use. 

  contact:
    name: gematik GmbH
    url: 'http://www.gematik.de'

  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0'

  version: 1.2.0

  # version history:
  # ----------------
  # version 1.2.0
  #   - just one email address is allowed
  #   - remove getEmails
  #   - remove deleteEmails
  #   - update of get, set, update of emails
  # version 1.1.1
  #   - added limit of 10 mail addresses to setEmail operation (description)
  #   - editorial correction in operation descriptions
  #   - removed log-entry requirement for setEmail 
  # version 1.1.0
  #   - bugfix UserAgentType
  # version 1.0.0
  #   - initial version

servers:
  - url: https://epa-hst1.prod.epa4all.de

tags:
- name: EmailManagement
  description: |
    **EmailManagement** allows:
    - by ePA-FdV user to get or update email address to the user's kvnr
    - by insurance to register or update email address of an insurant hosted by the insurance
   
    **Manage email addresses:**
    - (VAU channel shall be established)
    - (Login (IDP user authorization) shall be successfully completed)

paths:

  /epa/basic/api/v1/emailaddress:
    parameters:
      - $ref: '#/components/parameters/useragent'
      - $ref: '#/components/parameters/insurantid'
 
    post:
      tags:
        - EmailManagement
      operationId: setEmailAddress
      summary: (setEmailAddress) Set a single email address
      description: |
       This operation sets a new email address for an insurant. Emails refer to a specific
       user, identified by its _insurantid_.</br>
       This operation is limited to users of role _oid_kostentraeger_, which shall manage emails only for insurants hosted by the insurance.

       **Client**:</br>
       A client shall (mandatory) apply an email address.

       **Provider**:</br>
       A new email address associated to the kvnr of the requestor shall be created with:
       - timestamp _createdAt_ set to current system time.

       A notification email shall be sent to this new email address of the user.

       | Conditions | Status code | Error code | Remarks |
       |------------|-------------|------------|---------|
       | Successful operation | 201 |||
       | Request does not match schema | 400 | malformedRequest ||
       | Requestor role is not _oid_kostentraeger_ | 403 | invalidOid ||
       | Device registration does not exist |403 | unregisteredDevice ||
       | Missing _x-insurantid_ | 403 | invalidParam | _oid_kostentraeger_ requires _x-insurantid_ |
       | Any other error | 500 | internalError | (see 'Retry interval') |

       </br>
       | Postconditions                        | Remarks |
       |---------------------------------------|---------|
       | Email notification is sent ||
       | The raw-data of the operation is collected and associated to _useragent_ | for any operation result according to gemSpec_Perf UC_A2.2 and UC_A2.5 |

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequestType'

      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressType'
        '400':
          $ref: '#/components/responses/Error400BadRequest'
        '403':
          $ref: '#/components/responses/Error403Forbidden'
        '409':
          $ref: '#/components/responses/Error409Conflict'
        '500':
          $ref: '#/components/responses/Error500InternalError'

    get:
      tags:
        - EmailManagement
      operationId: getEmailAddress
      summary: (getEmailAddress) get stored email address
      description: |
        Retrieves information about a specific email address.</br>
        This operation is limited to users of role _oid_versicherter_, which has to be the insurant itself or role _oid_kostentraeger_, which shall manage emails only for insurants hosted by the insurance.

        **Client**:</br>
        An ePA-FdV client shall have a valid device registration.

        **Provider**</br>
        no recommendations.

        An active user session is required.

        | Conditions | Status code | Error code | Remarks |
        |------------|-------------|------------|---------|
        | Successful operation | 200|||
        | Request does not match schema | 400 | malformedRequest ||
        | Requestor role is not _oid_versicherter_ | 403 | invalidOid ||
        | Device registration does not exist |403 | unregisteredDevice ||
        | Missing _x-insurantid_ | 403 | invalidParam | _oid_kostentraeger_ (only) requires _x-insurantid_ |
        | Email does not exist|404| noRessource ||
        | Requestor is not insurant (health record owner) | 409 | requestMismatch | in case role is _oid_versicherter_ |
        | Any other error | 500 | internalError | (see 'Retry interval') |

         </br>
        | Postconditions                        | Remarks |
        |---------------------------------------|---------|
        | none ||

      responses:
        '200':
          description: 'OK.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressType'
        '400':
          $ref: '#/components/responses/Error400BadRequest'
        '403':
          $ref: '#/components/responses/Error403Forbidden'
        '404':
          $ref: '#/components/responses/Error404NotFound'
        '409':
          $ref: '#/components/responses/Error409Conflict'
        '500':
          $ref: '#/components/responses/Error500InternalError'

    put:
      tags:
        - EmailManagement
      operationId: replaceEmailAddress
      summary: (replaceEmailAddress) Replaces the existing email address
      description: |
       This operation replaces the existing email address for an insurant with a new email address. 
       Emailadress refers to a specific user, identified by its insurantid. This operation is limited to users of 
       role oid_versicherter, which has to be the insurant itself or role oid_kostentraeger, which shall manage emails only 
       for insurants hosted by the insurance.

       **Client**:</br>
       A client shall (mandatory) apply an email address. An ePA-FdV client shall have a valid device registration.

       **Provider**:</br>
       The existing email address is replaced by the provided new email address. The following information will be appended 
       to the new email address::

       - timestamp _createdAt_ set to current system time.

       A notification email should be sent to both the existing and the new email address.

       | Conditions | Status code | Error code | Remarks |
       |------------|-------------|------------|---------|
       | Successful operation | 200 |||
       | Request does not match schema | 400 | malformedRequest ||
       | Requestor role is not _oid_versicherter_ or _oid_kostentraeger_ | 403 | invalidOid ||
       | Device registration does not exist |403 | unregisteredDevice ||
       | Missing _x-insurantid_ | 403 | invalidParam | _oid_kostentraeger_ (only) requires _x-insurantid_ |
       | Requestor is not insurant (health record owner) | 409 | requestMismatch | in case role is _oid_versicherter_ |
       | Any other error | 500 | internalError | (see 'Retry interval') |

       </br>
       | Postconditions                        | Remarks |
       |---------------------------------------|---------|
       | Email notification is sent to both the existing and the new email address ||
       | The raw-data of the operation is collected and associated to _useragent_ | for any operation result according to gemSpec_Perf UC_A2.2 and UC_A2.5 |

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailRequestType'

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailAddressType'
        '400':
          $ref: '#/components/responses/Error400BadRequest'
        '403':
          $ref: '#/components/responses/Error403Forbidden'
        '409':
          $ref: '#/components/responses/Error409Conflict'
        '500':
          $ref: '#/components/responses/Error500InternalError'


components:
  parameters:
    insurantid:
      name: x-insurantid
      in: header
      description: Health Record Identifier. Is only required for user _oid_kostentraeger_.
      required: false
      schema:
        $ref: '#/components/schemas/InsurantIdType'
    useragent:
      name: x-useragent
      in: header
      description: user agent information
      required: true
      schema:
        $ref: '#/components/schemas/UserAgentType'

  responses:
    Error400BadRequest:
      description: Bad Request.
      content:
        application/json:
          example:
            errorCode: malformedRequest
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error403Forbidden:
      description: Forbidden.
      content:
        application/json:
          example:
            errorCode: invalidOid
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error404NotFound:
      description: Not found.
      content:
        application/json:
          example:
            errorCode: noResource
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error409Conflict:
      description: Conflict.
      content:
        application/json:
          examples:
            statusMismatch:
              value:
                errorCode: statusMismatch
          schema:
            $ref: '#/components/schemas/ErrorType'
    Error500InternalError:
      description: Internal Server Error
      content:
        application/json:
          example:
            errorCode: internalError
          schema:
            $ref: '#/components/schemas/ErrorType'

  schemas:
    UserAgentType:
      description: "Information about client software with: ClientId(20 characters) + / + VersionNumber (1 to 15 characters)."
      type: string
      pattern: '^[a-zA-Z0-9\-]{1,20}\/[a-zA-Z0-9\-\.]{1,15}$'
      example: CLIENTID1234567890AB/2.1.12-45
    InsurantIdType:
      type: string
      description: |-
        The health record identifier. 
        For today the record identifier equals the insurant id (kvnr).
      pattern: '^[A-Z]{1}\d{9}$'
      example: Z123456789
    EmailRequestType:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/EmailAddressType'
      required:
       - email
    EmailAddressType:
      type: string
      description: "email address"
      format: email
      example: "name@example.com"
    ErrorType:
      description: Error object with additional information about the occurred error
      type: object
      properties:
        errorCode:
          description: Error condition specifier
          type: string
        errorDetail:
          description: Additional details regarding the error condition (if applicable)
          type: string
      required:
        - errorCode
